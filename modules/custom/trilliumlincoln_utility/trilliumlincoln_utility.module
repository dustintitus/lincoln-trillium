<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Datetime\DrupalDateTime;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\OpenDialogCommand;
use Drupal\Core\Ajax\CloseDialogCommand;
use Drupal\views\ViewExecutable;
use Drupal\views\Entity\View;
use Drupal\views\Plugin\views\cache\CachePluginBase;
use Drupal\views\Plugin\views\query\QueryPluginBase;

/**
 * Implements hook_form_commerce_product_form_alter() for node edit form.
**/
function trilliumlincoln_utility_form_commerce_product_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $product = $form_state->getFormObject()->getEntity();
  if(!empty($form['field_car_year']['widget'][0]['value'])) {
    $form['field_car_year']['widget'][0]['value']['#date_year_range'] = '-30:+0';
    $form['field_car_year']['widget'][0]['value']['#date_part_order'] = ['year'];
  }

  if(!empty($form['field_car_stock_number'])) {
    $form['field_car_stock_number']['#attributes']['class'][] = 'hidden';
  }
}

/**
 * Implements hook_theme().
 */
function trilliumlincoln_utility_theme($existing, $type, $theme, $path) {
  return [
    'redirect-lincoln' => [
      'variables' => [
        'url' => Null
      ],
    ],
  ];
}

function trilliumlincoln_utility_preprocess_html(&$variables) {
  $account = \Drupal::currentUser();
  $roles = $account->getRoles();

  foreach ($roles as $role) {
    $variables['attributes']['class'][] = 'role-' . $role;
  }

  $variables['#attached']['library'][] = 'trilliumlincoln_utility/trilliumlincoln_utility.admin';
}
/**
 * Implements hook_webform_submission_form_alter().
**/
function trilliumlincoln_utility_webform_submission_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    case 'webform_submission_test_drive_add_form':
    case 'webform_submission_email_sales_add_form':
      honeypot_add_form_protection(
        $form,
        $form_state,
        ['honeypot', 'time_restriction']
      );

      $form['actions']['submit']['#attributes']['class'][] = 'use-ajax';
      $form['actions']['submit']['#attributes']['class'][] = 'btn';
      $form['actions']['submit']['#attributes']['class'][] = 'btn-info';
      $form['actions']['submit']['#attributes']['class'][] = 'btn-lg';

      $form['actions']['submit']['#ajax'] = [
        'callback' => 'submitModalFormAjax'
      ];
      $form['#attached']['library'][] = 'core/drupal.dialog.ajax';

      break;
  }
}

/**
 * AJAX callback handler that displays any errors or a success message.
 */
function submitModalFormAjax(array $form, FormStateInterface $form_state) {
    $response = new AjaxResponse();

    $form_object = $form_state->getFormObject();
    $webform_submission = $form_object->getEntity();
    $webform = $webform_submission->getWebform();
    $message = drupal_get_messages();

    // If there are any form errors, re-display the form.
    if ($form_state->hasAnyErrors()) {
      $response->addCommand(new OpenDialogCommand('#trilliumlincoln-close-modal', $webform->label(), $form, ['modal' => true]));
    }
    else {
      $response->addCommand(new CloseDialogCommand('#trilliumlincoln-close-modal'));
    }

    return $response;
}

function trilliumlincoln_utility_form_views_exposed_form_alter(&$form, FormStateInterface $form_state) {
  $view = $form_state->get('view');
  $display = $form_state->get('display');

  if ($display['id'] == 'page_1' && $view->id() == 'product_list') {
    $options = ["all" => 'All'] + $form['field_car_type_target_id']['#options'];
    $form['field_car_type_target_id']['#options'] = $options;
    $form['field_car_type_target_id']['#prefix'] = '<div class="form-wrapper-filter">';

    $form['actions']['submit']['#attributes']['class'][] = 'btn-info';
    $form['actions']['submit']['#attributes']['class'][] = 'btn-lg';

    $query = db_select('commerce_product__field_car_year', 'fcy');
    $query->fields('fcy', ['field_car_year_value']);
    $query->condition('fcy.deleted', 0);
    $query->condition('fcy.bundle', 'car');
    $query->orderBy('fcy.field_car_year_value', 'ASC');
    $field_car_year_value = $query->execute()->fetchCol();

    $options_year = [
      '' => t('Year')
    ];

    if (!empty($field_car_year_value)) {
      foreach ($field_car_year_value as $key => $value) {
        $options_year[$value] = date('Y', strtotime($value));
      }
    }

    $form['field_car_year_value']['#type'] = 'select';
    $form['field_car_year_value']['#size'] = 1;
    $form['field_car_year_value']['#options'] = $options_year;
    
    $form['field_car_model_target_id']['#suffix'] = '</div>';
    $form['field_car_model_target_id']['#options']['All'] = t('Model');

    $form['field_car_stock_number_value']['#attributes']['placeholder'] = t('stock #');

    $form['#attached']['library'][] = 'trilliumlincoln_utility/trilliumlincoln_utility.search_filter';
  }
}

/**
 * Implements hook_views_post_render().
 */
function trilliumlincoln_utility_views_post_render(ViewExecutable $view, &$output, CachePluginBase $cache) {
  if ($view->id() == 'media_entity_browser') {
    if (!empty($view->element['#attached']['library'])) {
      $views_ajax_history_key = array_search('views_ajax_history/history', $view->element['#attached']['library']);
      if ($views_ajax_history_key !== FALSE) {
        unset($view->element['#attached']['library'][$views_ajax_history_key]);
      }
    }

    if (isset($view->element['#attached']['drupalSettings']['viewsAjaxHistory'])) {
      unset($view->element['#attached']['drupalSettings']['viewsAjaxHistory']);
    }

    if (!empty($view->element['#cache']['contexts'])) {
      $views_ajax_history_cache_key = array_search('url.query_args.pagers', $view->element['#cache']['contexts']);
      if ($views_ajax_history_cache_key !== FALSE) {
        unset($view->element['#cache']['contexts'][$views_ajax_history_cache_key]);
      }
    }
  }
}

/**
 * Implements hook_views_query_alter().
 */
function trilliumlincoln_utility_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if ($view->storage->get('id') === 'product_list' && $view->current_display === 'page_1') {
    $exposed_value = $view->exposed_raw_input;
    if (isset($exposed_value['all'])) {
      unset($exposed_value['all']);
      $vid = 'car_type';
      $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
      $car_type_target_id = [];
      if (!empty($terms)) {
        foreach ($terms as $key => $term) {
          $car_type_target_id[$term->tid] = $term->tid;
          $exposed_value[$term->tid] = $term->tid;
        }
      }

      if(isset($query->where[0]['conditions'][0]['value'][':commerce_product__field_car_type_field_car_type_target_id'])){
        unset($query->where[0]['conditions'][0]['value'][':commerce_product__field_car_type_field_car_type_target_id']);
      }

      $query->where[0]['conditions'][0]['field'] = 'commerce_product__field_car_type.field_car_type_target_id IN(:commerce_product__field_car_type_field_car_type_target_id[])';
      $query->where[0]['conditions'][0]['value'][':commerce_product__field_car_type_field_car_type_target_id[]'] = $car_type_target_id;
    }

    $_SESSION['search-car-filter'] = $exposed_value;
  }
}